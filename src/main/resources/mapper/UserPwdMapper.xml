<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huifu.auth.dao.UserPwdMapper">
  <resultMap id="BaseResultMap" type="com.huifu.auth.entity.UserPwd">
    <id column="uid" jdbcType="BIGINT" property="uid" />
    <result column="login_id" jdbcType="VARCHAR" property="loginId" />
    <result column="passwd" jdbcType="VARCHAR" property="passwd" />
    <result column="modified_uid" jdbcType="BIGINT" property="modifiedUid" />
    <result column="modified_time" jdbcType="VARCHAR" property="modifiedTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uid, login_id, passwd, modified_uid, modified_time
  </sql>
  <select id="selectByExample" parameterType="com.huifu.auth.entity.UserPwdExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_pwd
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_pwd
    where uid = #{uid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_pwd
    where uid = #{uid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.huifu.auth.entity.UserPwdExample">
    delete from user_pwd
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.huifu.auth.entity.UserPwd">
    insert into user_pwd (uid, login_id, passwd, 
      modified_uid, modified_time)
    values (#{uid,jdbcType=BIGINT}, #{loginId,jdbcType=VARCHAR}, #{passwd,jdbcType=VARCHAR}, 
      #{modifiedUid,jdbcType=BIGINT}, #{modifiedTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.huifu.auth.entity.UserPwd">
    insert into user_pwd
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="loginId != null">
        login_id,
      </if>
      <if test="passwd != null">
        passwd,
      </if>
      <if test="modifiedUid != null">
        modified_uid,
      </if>
      <if test="modifiedTime != null">
        modified_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="loginId != null">
        #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null">
        #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="modifiedUid != null">
        #{modifiedUid,jdbcType=BIGINT},
      </if>
      <if test="modifiedTime != null">
        #{modifiedTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.huifu.auth.entity.UserPwdExample" resultType="java.lang.Long">
    select count(*) from user_pwd
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_pwd
    <set>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.loginId != null">
        login_id = #{record.loginId,jdbcType=VARCHAR},
      </if>
      <if test="record.passwd != null">
        passwd = #{record.passwd,jdbcType=VARCHAR},
      </if>
      <if test="record.modifiedUid != null">
        modified_uid = #{record.modifiedUid,jdbcType=BIGINT},
      </if>
      <if test="record.modifiedTime != null">
        modified_time = #{record.modifiedTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_pwd
    set uid = #{record.uid,jdbcType=BIGINT},
      login_id = #{record.loginId,jdbcType=VARCHAR},
      passwd = #{record.passwd,jdbcType=VARCHAR},
      modified_uid = #{record.modifiedUid,jdbcType=BIGINT},
      modified_time = #{record.modifiedTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.huifu.auth.entity.UserPwd">
    update user_pwd
    <set>
      <if test="loginId != null">
        login_id = #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null">
        passwd = #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="modifiedUid != null">
        modified_uid = #{modifiedUid,jdbcType=BIGINT},
      </if>
      <if test="modifiedTime != null">
        modified_time = #{modifiedTime,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huifu.auth.entity.UserPwd">
    update user_pwd
    set login_id = #{loginId,jdbcType=VARCHAR},
      passwd = #{passwd,jdbcType=VARCHAR},
      modified_uid = #{modifiedUid,jdbcType=BIGINT},
      modified_time = #{modifiedTime,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=BIGINT}
  </update>
</mapper>