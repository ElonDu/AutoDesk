<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huifu.auth.dao.SeqCtlMapper">
  <resultMap id="BaseResultMap" type="com.huifu.auth.entity.SeqCtl">
    <id column="id" jdbcType="BIGINT" property="id" />
    <id column="sub_id" jdbcType="BIGINT" property="subId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="next_value" jdbcType="BIGINT" property="nextValue" />
    <result column="min_value" jdbcType="BIGINT" property="minValue" />
    <result column="max_value" jdbcType="BIGINT" property="maxValue" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sub_id, name, next_value, min_value, max_value
  </sql>
  <select id="selectByExample" parameterType="com.huifu.auth.entity.SeqCtlExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from seq_ctl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.huifu.auth.entity.SeqCtlKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from seq_ctl
    where id = #{id,jdbcType=BIGINT}
      and sub_id = #{subId,jdbcType=BIGINT}
  </select>
  
  <!-- Custom Method -->
  <select id="lockByPrimaryKey" parameterType="com.huifu.auth.entity.SeqCtlKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from seq_ctl
    where id = #{id,jdbcType=BIGINT}
      and sub_id = #{subId,jdbcType=BIGINT}
    FOR UPDATE
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="com.huifu.auth.entity.SeqCtlKey">
    delete from seq_ctl
    where id = #{id,jdbcType=BIGINT}
      and sub_id = #{subId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.huifu.auth.entity.SeqCtlExample">
    delete from seq_ctl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.huifu.auth.entity.SeqCtl">
    insert into seq_ctl (id, sub_id, name, 
      next_value, min_value, max_value
      )
    values (#{id,jdbcType=BIGINT}, #{subId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, 
      #{nextValue,jdbcType=BIGINT}, #{minValue,jdbcType=BIGINT}, #{maxValue,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.huifu.auth.entity.SeqCtl">
    insert into seq_ctl
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="subId != null">
        sub_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="nextValue != null">
        next_value,
      </if>
      <if test="minValue != null">
        min_value,
      </if>
      <if test="maxValue != null">
        max_value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="subId != null">
        #{subId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nextValue != null">
        #{nextValue,jdbcType=BIGINT},
      </if>
      <if test="minValue != null">
        #{minValue,jdbcType=BIGINT},
      </if>
      <if test="maxValue != null">
        #{maxValue,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.huifu.auth.entity.SeqCtlExample" resultType="java.lang.Long">
    select count(*) from seq_ctl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update seq_ctl
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.subId != null">
        sub_id = #{record.subId,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.nextValue != null">
        next_value = #{record.nextValue,jdbcType=BIGINT},
      </if>
      <if test="record.minValue != null">
        min_value = #{record.minValue,jdbcType=BIGINT},
      </if>
      <if test="record.maxValue != null">
        max_value = #{record.maxValue,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update seq_ctl
    set id = #{record.id,jdbcType=BIGINT},
      sub_id = #{record.subId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      next_value = #{record.nextValue,jdbcType=BIGINT},
      min_value = #{record.minValue,jdbcType=BIGINT},
      max_value = #{record.maxValue,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.huifu.auth.entity.SeqCtl">
    update seq_ctl
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nextValue != null">
        next_value = #{nextValue,jdbcType=BIGINT},
      </if>
      <if test="minValue != null">
        min_value = #{minValue,jdbcType=BIGINT},
      </if>
      <if test="maxValue != null">
        max_value = #{maxValue,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
      and sub_id = #{subId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huifu.auth.entity.SeqCtl">
    update seq_ctl
    set name = #{name,jdbcType=VARCHAR},
      next_value = #{nextValue,jdbcType=BIGINT},
      min_value = #{minValue,jdbcType=BIGINT},
      max_value = #{maxValue,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
      and sub_id = #{subId,jdbcType=BIGINT}
  </update>
</mapper>